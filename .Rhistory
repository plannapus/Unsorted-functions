install.packages(c("bibtex", "rjson"))
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
sapply(js,function(x)x$message$created$`date-time`)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
bib
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(gdata)
library(tm)
library(wordcloud)
file <- "~/Git/random_projects/citing.xls"
slow <- TRUE
a <- read.xls(file,sheet=3,header=TRUE,encoding="latin1")
b <- read.xls(file,sheet=1,header=TRUE,encoding="latin1")
A <- merge(a,b,by="Citing.paper")
titles <- gsub("[[:punct:]]"," ",A$Title)
rss <- Corpus(VectorSource(titles),readerControl=list(language="en"))
rss <- tm_map(rss, stripWhitespace)
tdm <- TermDocumentMatrix(rss)
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
w<-c()
for(i in seq_along(names(v))){n<-names(v)%in%paste0(names(v)[i],"s");if(any(n))w[i]<-which(n)}
for(i in seq_along(w)){if(!is.na(w[i])){v[i]<-v[i]+v[w[i]]}}
v <- v[-w[!is.na(w)]]
if(slow){
nv <- expand.grid(names(v),names(v))
nv <- nv[nv[,1]!=nv[,2],]
nnv <- t(apply(nv,1,sort))
nnv <- nnv[!duplicated(nnv),]
ld <- apply(nnv,1,function(x)adist(x[1],x[2]))
todelete <- c()
for(i in seq_along(ld)){
if(!is.na(ld[i])){if(ld[i]<2){
w <- which(names(v)%in%nnv[i,])
v[w[1]]<-v[w[1]]+v[w[2]]
todelete <- c(todelete,w[2])
}}
}
v <- v[-todelete]
}
d <- data.frame(word = names(v),freq=v)
d <- d[!d$word%in%c(stopwords("en"),stopwords("es"),"iii","ii","iv","part"),]
par(mar=c(0,0,0,0))
wordcloud(d$word,d$freq,scale=c(5,.5),max.words=50,random.order=FALSE,colors=grey(rev(sort(unique(d$freq)))/max(d$freq)))
wordcloud(d$word[d$freq>5],d$freq[d$freq>5],scale=c(5,.5),max.words=50,random.order=FALSE,colors=grey(rev(sort(unique(d$freq)))/max(d$freq)))
dev.new()
wordcloud(d$word[d$freq>5],d$freq[d$freq>5],scale=c(5,.5),max.words=50,random.order=FALSE,colors=grey(rev(sort(unique(d$freq)))/max(d$freq)))
d
d[order(d$freq,dec=T)]
d[order(d$freq,dec=T),]
d[order(d$freq,decreasing=T),]
d[d$word=="bivalve",]
d[d$word=="bivalves",]
d[d$word=="toarcian",]
d[d$word=="jurassic",]
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
dois
bib
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
library(bibtex)
library(rjson)
bib <- dir("/mnt/BACKUP_DISK/Backup_MFNA0045/Documents/Manuscripts/#Bibliography/BibTex", full.names=TRUE)
B <- lapply(bib,read.bib)
dois <- sapply(B, function(x)x[[1]][[1]]$doi)
cref <- paste0("https://api.crossref.org/works/",dois)
js <- lapply(cref, function(x)fromJSON(readLines(x, warn=FALSE)))
title <- sapply(js,function(x)x$message$title)
n <- sapply(js,function(x)x$message$`is-referenced-by-count`)
year <- as.Date(sapply(js,function(x)x$message$created$`date-time`))
cr <- data.frame(Title=title,
Citations=n)[order(year),]
cr
sum(cr$Citations)
plot.cite <- function(file){
library(gdata)
citing <- read.xls(file,sheet=1,header=TRUE, encoding="latin1",stringsAsFactors=FALSE)
papers <- read.xls(file,sheet=2,header=TRUE, encoding="latin1",stringsAsFactors=FALSE)
citing[,2] <- as.Date(citing[,2],"%Y-%m-%d")
papers[,2] <- as.Date(papers[,2],"%Y-%m-%d")
papers <- papers[!is.na(papers[,2]),]
citing <- citing[!is.na(citing[,2]),]
citing <- citing[order(citing[,2]),]
n <- h <- hD <-  m <- g <- i10 <- hm <- c()
dat <- unique(citing[,2])
for(i in seq_along(dat)){
subs <- citing[citing[,2]<=dat[i],]
psubs <- papers[papers[,2]<=dat[i],]
n[i] <- nrow(subs)
cites <- sort(table(subs[,3]),d=TRUE)
nb <- 1:length(cites)
h[i] <- tail(nb[nb<=cites],1)
M <- sum(max(0,(h[i]+1)-cites[0:h[i]+1],na.rm=TRUE))
if(nrow(psubs)>h[i]){hD[i] <- h[i]+1-M/(2*h[i]+1)}else{hD[i]<-h[i]}
nb2 <- nb^2
cs <- cumsum(cites)
g[i] <- tail(nb[nb2<=cs],1)
Yr <- as.integer(floor(difftime(dat[i],min(papers[,2],na.rm=TRUE),"days")/365))
m[i] <- h[i]/Yr
i10[i] <- sum(cites>=10)
a <- data.frame(Var1=names(cites),Freq=as.vector(cites))
b <- merge(papers,a,by.x="Cited.Paper",by.y="Var1")
b <- b[order(b$Freq,decreasing=TRUE),]
CS <- cumsum(1/sapply(strsplit(b$Authors,", "),length))
hm[i] <- tail(CS[CS<=b$Freq],1)
}
d <- c(0,diff(h))
#d <- c(0,diff(g))
par(mar=c(3,3,1,1))
dmax <- as.Date(cut(as.POSIXct(Sys.Date()+16),"months"))
plot(citing[,2],seq_along(citing[,2]),
ann=F,ax=F,pch=19,type="n",yaxs="i",xaxs="i",
ylim=c(0,round(nrow(citing)+5,-1)),
xlim=c(min(papers[,2],na.rm=TRUE),dmax))
months=seq.Date(as.Date(cut(min(papers[,2],na.rm=TRUE),"month")),dmax,"month")
years=seq.Date(as.Date(cut(min(papers[,2],na.rm=TRUE),"year")),dmax,"year")
t <- table(cut(citing[,2],"month"))
t <- t[as.Date(names(t))<dmax]
nt <- names(t)
invisible(sapply(seq_along(t), function(x)rect(as.Date(names(t)[x]),t[x],months[which(months==names(t)[x])+1],0,col="grey80",border=NA)))
abline(v=months,col="grey95")
abline(v=years,col="grey50")
abline(v=Sys.Date(),h=nrow(citing),col="red",lty=3)
N=c(n[1],n[d==1],tail(n,1))
D=c(dat[1],dat[d==1],tail(dat,1))
rect(tail(D,-1),head(N,-1),head(D,-1),tail(N,-1),border="red",lwd=2)
points(citing[,2],seq_along(citing[,2]),pch=ifelse(citing[,1]%in%papers[,1],21,19),cex=0.8,bg="red")
box(lwd=2)
axis(2,las=2)
axis.Date(1,at=years+182,tick=FALSE,las=1,mgp=c(3,.5,0),cex.axis=0.8)
mtext(nrow(citing),side=2,cex=0.7,font=3,col="red",line=0.5,at=nrow(citing),las=2)
for(i in 1:nrow(papers)){
if(!papers[i,6]%in%"Software") points(papers[i,2],0,pch=19,col="blue",cex=0.4+0.1*nrow(papers[papers[,2]==papers[i,2],]),xpd=NA)
}
}
dev.new();plot.cite("/home/johan/Git/random_projects/citing.xls")
#dev.new();plot.cite("/Users/johan.renaudie/Documents/Vrac/Scripts/#Metrics/other people/clément.xls")
cite <- function(file){
citing <- gdata::read.xls(file,sheet=1,header=TRUE)
citing <- citing[citing[,2]!="",]
citing[,2] <- as.Date(citing[,2])
citing <- citing[order(citing[,2]),]
n <- h <- m <- g <- i10 <- c()
dates <- unique(citing[,2])
for(i in seq_along(dates)){
subs <- citing[citing[,2]<=dates[i],]
n[i] <- nrow(subs)
cites <- sort(table(subs[,3]),d=TRUE)
nb <- 1:length(cites)
h[i] <- tail(nb[nb<=cites],1)
nb2 <- nb^2
cs <- cumsum(cites)
g[i] <- tail(nb[nb2<=cs],1)
i10[i] <- sum(cites>=10)
}
res <- data.frame(Date=dates,Sum=n,"h-index"=h, "g-index"=g, "i10-index"=i10)
res[!duplicated(res[,3:5]),]
}
cite("/home/johan/Git/random_projects/citing.xls")
#cite("/Users/johan.renaudie/Documents/Vrac/Scripts/#Metrics/other people/clément.xls")
file=""/home/johan/Git/random_projects/citing.xls""
file=/home/johan/Git/random_projects/citing.xls"
file="/home/johan/Git/random_projects/citing.xls"
library(gdata)
citing <- read.xls(file,sheet=1,header=TRUE, encoding="latin1",stringsAsFactors=FALSE)
papers <- read.xls(file,sheet=2,header=TRUE, encoding="latin1",stringsAsFactors=FALSE)
citing[,2] <- as.Date(citing[,2],"%Y-%m-%d")
papers[,2] <- as.Date(papers[,2],"%Y-%m-%d")
papers <- papers[!is.na(papers[,2]),]
citing <- citing[!is.na(citing[,2]),]
citing <- citing[order(citing[,2]),]
n <- h <- hD <-  m <- g <- i10 <- hm <- c()
dat <- unique(citing[,2])
for(i in seq_along(dat)){
subs <- citing[citing[,2]<=dat[i],]
psubs <- papers[papers[,2]<=dat[i],]
n[i] <- nrow(subs)
cites <- sort(table(subs[,3]),d=TRUE)
nb <- 1:length(cites)
h[i] <- tail(nb[nb<=cites],1)
M <- sum(max(0,(h[i]+1)-cites[0:h[i]+1],na.rm=TRUE))
if(nrow(psubs)>h[i]){hD[i] <- h[i]+1-M/(2*h[i]+1)}else{hD[i]<-h[i]}
nb2 <- nb^2
cs <- cumsum(cites)
g[i] <- tail(nb[nb2<=cs],1)
Yr <- as.integer(floor(difftime(dat[i],min(papers[,2],na.rm=TRUE),"days")/365))
m[i] <- h[i]/Yr
i10[i] <- sum(cites>=10)
a <- data.frame(Var1=names(cites),Freq=as.vector(cites))
b <- merge(papers,a,by.x="Cited.Paper",by.y="Var1")
b <- b[order(b$Freq,decreasing=TRUE),]
CS <- cumsum(1/sapply(strsplit(b$Authors,", "),length))
hm[i] <- tail(CS[CS<=b$Freq],1)
}
cbind(nb,cites,nb2,cs)
hm
h
m
i10
g
hD
cbind(nb,cites,nb2,cs)
text <- "In hommage to the first ever morpho-molecular phylogeny of Spumellarians coming out as a preprint this week (https://doi.org/10.1101/2020.06.29.176917), here is an Actinomma boreale I found in the Pleistocene of ODP Site 738B"
nchar(text)
text <- "In hommage to the first ever morpho-molecular phylogeny of Spumellarians coming out as a preprint this week (https://doi.org/10.1101/2020.06.29.176917), here is an Actinomma boreale I found in the Pleistocene of ODP Site 738B years ago."
nchar(text)
cbind(nb,cites,nb2,cs)
library(ape)
read.tree(text="(Nassellaria:(Eucyrtidoida, ((Acropyramioidea,((Carpocaniidae, Artostrobioidea),Acanthodesmoidea)), (((Archipiloidea,Theopilidae),Plagiacanthoidea), (Cycladophoridae, (Lychnocanoidea,Pterocorythoidea))))), Spumellaria:((Hexastyloidea, (Spongosphaeroidea,(Lithocyclioidea, Spongodiscoidea))), (Liosphaeroidea,((Rhizosphaeroidea,Centrocuboidea:(Centrocubidae,Excentroconchidae)), ((Stylodictyoidea,(Actinommoidea,Spongopyloidea)), Pylonioidea:(Tholoniidae,Pyloniidae))))));")->poly
plot(poly)
read.tree(text="((Eucyrtidoida, ((Acropyramioidea,((Carpocaniidae, Artostrobioidea),Acanthodesmoidea)), (((Archipiloidea,Theopilidae),Plagiacanthoidea), (Cycladophoridae, (Lychnocanoidea,Pterocorythoidea)))))Nassellaria, ((Hexastyloidea, (Spongosphaeroidea,(Lithocyclioidea, Spongodiscoidea))), (Liosphaeroidea,((Rhizosphaeroidea,(Centrocubidae,Excentroconchidae)Centrocuboidea), ((Stylodictyoidea,(Actinommoidea,Spongopyloidea)), (Tholoniidae,Pyloniidae)Pylonioidea))))Spumellaria);")->poly
plot(poly)
plot(poly,nodelabels=TRUE)
?plot.phylo
plot(poly,show.node.label=TRUE)
poly <- read.tree(text="((Eucyrtidoida, ((Acropyramioidea,((Carpocaniidae, Artostrobioidea),(Acanthodesmoidea,(Orosphaeridae,(Sphaerozoidae,(Collophidiidae,Collosphaeridae))Collodaria)))), (((Archipiloidea,Theopilidae),Plagiacanthoidea), (Cycladophoridae, (Lychnocanoidea,Pterocorythoidea)))))Nassellaria, ((Hexastyloidea, (Spongosphaeroidea,(Lithocyclioidea, Spongodiscoidea))), (Liosphaeroidea,((Rhizosphaeroidea,(Centrocubidae,Excentroconchidae)Centrocuboidea), ((Stylodictyoidea,(Actinommoidea,Spongopyloidea)), (Tholoniidae,Pyloniidae)Pylonioidea))))Spumellaria);")
plot(poly,show.node.label=TRUE)
?plot.phylo
plot(poly,show.node.label=TRUE,node.pos=2)
plot(poly,show.node.label=TRUE,node.pos=1)
?plot.phylo
plot(poly)
nodelabels()
str(poly)
?nodelabels
plot(poly)
nodelabels(text=poly$node.label[poly$node.label!=""],node=(28:54)[poly$node.label!=""])
nodelabels(text=poly$node.label[poly$node.label!=""],node=(29:54)[poly$node.label!=""])
plot(poly)
nodelabels(text=poly$node.label[poly$node.label!=""],node=(29:54)[poly$node.label!=""])
plot(poly)
compute.brlen(poly)
compute.brlen(poly)
compute.brlen(poly)->poly
plot(poly)
compute.brlen(poly,"Grafen")->poly
plot(poly)
?compute.brlen
compute.brlen(poly,1)->poly
plot(poly)
compute.brlen(poly,"Grafen")->poly
plot(poly)
nodelabels(text=poly$node.label[poly$node.label!=""],node=(29:54)[poly$node.label!=""],cex=0.5)
29+27
nodelabels(text=poly$node.label[poly$node.label!=""],node=(29:56)[poly$node.label!=""],cex=0.5)
plot(poly,type="fan")
?plot.phylo
plot(poly,type="radial")
?plot.phylo
plot(poly,type="cladogram")
nodelabels(text=poly$node.label[poly$node.label!=""],node=(29:56)[poly$node.label!=""],cex=0.5)
plot(poly,type="cladogram",offset=0.5)
plot(poly,type="cladogram",label.offset=0.5)
plot(poly,type="cladogram",label.offset=0.1)
plot(poly,type="cladogram",label.offset=0.01)
poly$edge.length
plot(poly,label.offset=0.1)
plot(poly,label.offset=0.01)
nodelabels(text=poly$node.label[poly$node.label%in%c("Nassellaria","Spumellaria","Collodaria")],node=(29:56)[poly$node.label%in%c("Nassellaria","Spumellaria","Collodaria")],cex=0.8)
nodelabels(text="Polycystinea",node=29,cex=0.8)
dev.copy2pdf("Work/polycystinea.pdf",w=8,h=8)
?dev.copy2pdf
dev.copy(pdf,"~/Work/polycystinea.pdf",w=8,h=8)
dev.off()
dev.copy(pdf,"~/Work/polycystinea.pdf",w=15,h=8)
dev.off()
g <- dir("~/Git", full.names=TRUE)
year <- seq(Sys.Date()-732,Sys.Date(),by="day")
commits <- vector("integer",length=length(year))
for(i in seq_along(g)){
setwd(g[i])
a <- system("git log",intern=TRUE)
dates <- strptime(gsub("Date: +","",a[grep("Renaudie",a)+1]),"%a %b %d %H:%M:%S %Y %z")
d <- as.Date(dates)
d <- d[!is.na(d)]
for(j in d) commits[year==j] <- commits[year==j]+1
}
m <- max(commits)
y <- as.integer(format(year,"%u"))
x <- as.integer(cut(year,"week"))
M <- matrix(nr=max(x),nc=max(y))
for(i in seq_along(commits)){M[x[i],y[i]] = commits[i]}
png("~/Documents/updates/commits.png",width=2*75*54/7, height=75, bg="transparent")
par(mar=c(0,0,0,1))
image(1:nrow(M),1:7,M, breaks=c(-1,0,1,5,10,20,50),
col=c("transparent","#c6e48b","#7bc96f","#239a3b","#196127","black"),
asp=1,xaxs="i",yaxs="i",axes=FALSE,ann=FALSE,ylim=c(7,1),xlim=c(0.5,nrow(M)+.5))
abline(v=0:(nrow(M)+1)+.5,col="grey80")
abline(h=1:7-.5,col="grey80")
box(col="grey80")
dev.off()
